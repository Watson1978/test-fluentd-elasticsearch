services:

  fluentd:
    build:
      context: ./fluentd
      # dockerfile: fluentd-1.15+es-5.1.5.dockerfile
      # dockerfile: fluentd-1.15+es-5.2.0.dockerfile
      # dockerfile: fluentd-1.15+es-5.2.1.dockerfile
      # dockerfile: fluentd-1.15+es-5.2.2.dockerfile
      # dockerfile: fluentd-1.15+es-5.2.3.dockerfile
      dockerfile: fluentd-1.15+es-5.2.4.dockerfile
      # dockerfile: fluentd-1.15+es-5.2.5.dockerfile
      # dockerfile: fluentd-1.16+es-5.2.5.dockerfile
      # dockerfile: fluentd-1.17-es-5.1.5.dockerfile
      # dockerfile: fluentd-1.17+es-5.2.5.dockerfile
      # dockerfile: fluentd-1.18+es-5.2.5.dockerfile
      # dockerfile: fluentd-1.19.dev+es-5.2.5.dockerfile
    volumes:
      - "./fluentd/conf:/fluentd/etc"
      - "./fluentd/plugins:/fluentd/plugins"
      - "./fluentd/tmp:/fluentd/tmp"
      - "./fluentd/logs:/fluentd/logs"

    depends_on:
      elasticsearch:
        condition: service_healthy

  # log-generator:
  #   image: registry.api.weibo.com/kube/busybox:latest
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       truncate -s 0 /fluentd/logs/data.log /fluentd/logs/request.log
  #       for i in $(seq 1 1 3000); do
  #         date -Ins >> /fluentd/logs/data.log
  #       done
  #       while true; do
  #         cat /fluentd/logs/data.log >> /fluentd/logs/request.log
  #         sleep 1
  #       done
  #   volumes:
  #     - "./fluentd/logs:/fluentd/logs"
  #   depends_on:
  #     fluentd:
  #       condition: service_started

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.28
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # Disable security for testing
    healthcheck:
      # Check whether service is ready
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    ports:
      - 9200:9200
